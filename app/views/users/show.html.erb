<h1>User Information</h1>
<p><strong>Email:</strong> <%= @user.email %></p>
<p><strong>Encrypted Password:</strong> <%= @user.encrypted_password %></p>
<p><strong>Credentials:</strong>

<table>
  <tbody>
    <% @user.credentials.each do |credential| %>
      <tr>
        <td><%= credential.label %></td>
          <td>
              <%= button_to destroy_credential_path(credential), method: :delete, data: { confirm: 'Are you sure?' } do %>
                  Delete
              <% end %>
          </td>
      </tr>
    <% end %>
  </tbody>
</table>
</br>

<div>
    <%= form_with scope: :credential,
        url: callback_user_path,
        data: {
          "challenge_url": add_credential_url
        },
        local: false,
        id: "add-passkey-form" do |form| %>
        <div>

    <%= form.hidden_field :credential %>

    <button type="submit"> Add passkey</button>
                <%= form.text_field :credential_label, placeholder: "Label", required: true %>
        </div>
    <% end %>
</div>


<script type="module">
    
import {
  create,
  parseCreationOptionsFromJSON,
} from "@github/webauthn-json/browser-ponyfill";
    
let submitFormEvent = async function(event){
// 1
  const csrfToken = document.getElementsByName("csrf-token")[0].content;
  event.preventDefault()
  event.stopImmediatePropagation()

// 2
  let form = event.currentTarget
  let data = new FormData(form)
  data.delete('_method')
  let credentialFieldName = form.dataset.credentialFieldName

// 3
  let newChallengeURL = new URL(form.dataset.challengeUrl)

  let challengeFetch = fetch(newChallengeURL, {
    method: "POST",
    headers: {
      "Accept": "application/json",
      "X-CSRF-Token": csrfToken,
    },
    body: data,
  })

  const challengeJSON = await(await challengeFetch).json()
// 4
  const credentialCreationOptions = parseCreationOptionsFromJSON({publicKey: challengeJSON})

  const credentialCreationResponse = await create(credentialCreationOptions)
console.log(form.elements)
  form.elements['credential[credential]'].value = JSON.stringify(credentialCreationResponse)
// 5
  form.submit()
}

  document.querySelector('#add-passkey-form').addEventListener('submit', submitFormEvent)
</script>
